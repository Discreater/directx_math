name: tests
on:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
  push:
    paths-ignore:
    - CHANGELOG.md
    - README.md

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install rust
      uses: actions-rs/toolchain@v1
      id: rust
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: clippy
    - name: Run clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
  ARM:
    strategy:
      matrix:
        toolchain:
          - nightly
        target:
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabi
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        target: ${{ matrix.target }}
        default: true
        override: true
        profile: minimal
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Build (--features=no_intrinsics)
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --features=no_intrinsics
      
  no-intrinsics:
    name: x86-64 (No Intrinsics)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        id: rust
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          profile: minimal
      - name: Build and test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features=no_intrinsics
      - name: Build and test (with specialization)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features=no_intrinsics,specialization

  intrinsics:
    name: x86-64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
        target_feature:
          - ""
          - "+sse3"
          - "+sse3,+sse4.1"
          - "+sse3,+sse4.1,+avx"
          - "+sse3,+sse4.1,+avx,+f16c"
          - "+sse3,+sse4.1,+avx,+f16c,+fma"
          - "+sse3,+sse4.1,+avx,+f16c,+fma,+avx2"
    env:
      RUSTFLAGS: "-C target-feature=${{ matrix.target_feature }}"
    steps:
      - uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        id: rust
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          profile: minimal
      - name: Build and test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Build and test (with specialization)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features=specialization